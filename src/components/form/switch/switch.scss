$size: 1rem;
$padding: 2px;
$distance: calc($size - $padding);

fieldset {
  border: none;
  display: flex;
  flex-direction: column;
  gap: 8px;
  border-radius: 4px;
  border: solid 1px var(--outline);
  &:focus-within {
    border-color: var(--primary);
  }
  &:has(input:invalid) {
    border-color: var(--error);
  }
}
ul {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

label {
  position: relative;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
}
input {
  z-index: -1;
  position: absolute;
  opacity: 0;
}
.track {
  box-sizing: border-box;
  height: calc($size + 4px);
  width: calc(2 * $size + 4px);
  display: flex;
  align-items: center;
  padding: 2 * $padding;
  border-radius: $size;
  border: 1px solid var(--outline);
  .thumb {
    transform-origin: center;
    height: 0.8 * $size;
    width: 0.8 * $size;
    border-radius: $size;
    background-color: var(--outline);
    transform: scale(0.9);
    transition: transform 0.2s var(--ease-back-in-out);
  }
}

label:hover, label:focus-within {
  color: var(--on-background-variant);
  input:checked + .track {
    border-color: var(--primary);
    .thumb {
      background-color: var(--primary);
      transform: scale(1.1) translateX($distance);
    }
  }
  .thumb {
    background-color: var(--on-background-variant);
    transform: scale(1.1);
  }
}

input:checked + .track {
  border-color: var(--primary-container);
  background-color: var(--primary-container);
  .thumb {
    background-color: var(--on-primary-container);
    transform: translateX($distance);
  }
}

input:active + .track {
  .thumb {
    transform: scale(1.1, 1) translateX(-2px);
  }
}
